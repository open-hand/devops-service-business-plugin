<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.iam.infra.mapper.ProjectProMapper">

    <resultMap id="projectDTO" type="io.choerodon.iam.infra.dto.ProjectDTO" autoMapping="true">
        <id column="id" property="id"/>
        <result column="is_enabled" property="enabled" jdbcType="BOOLEAN"/>
        <collection property="projects" ofType="io.choerodon.iam.infra.dto.ProjectDTO">
            <id property="id" column="project_id"/>
            <result property="name" column="project_name"/>
            <result property="code" column="project_code"/>
            <result property="enabled" column="project_enabled"/>
            <result property="organizationId" column="project_organization_id"/>
            <result property="category" column="project_category"/>
        </collection>
    </resultMap>
    <resultMap id="projectMap" type="io.choerodon.iam.infra.dto.ProjectDTO" autoMapping="true">
        <id column="id" property="id"/>
        <result column="is_enabled" property="enabled" jdbcType="BOOLEAN"/>
    </resultMap>

    <resultMap id="projectWithRoleAndCategoryDTO" type="io.choerodon.iam.infra.dto.ProjectDTO" autoMapping="true">
        <id column="id" property="id"/>
        <result column="is_enabled" property="enabled" jdbcType="BOOLEAN"/>
        <collection property="roles" ofType="org.hzero.iam.domain.entity.Role"
                    autoMapping="true" notNullColumn="role_id">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="code" column="role_code"/>
            <result property="enabled" column="role_is_enabled"/>
            <result property="tenantId" column="role_org_id"/>
            <result property="objectVersionNumber" column="role_version_number"/>
            <result property="createdBy" column="role_created_by"/>
            <result property="creationDate" column="role_creation_date"/>
        </collection>
        <collection property="categories" ofType="io.choerodon.iam.infra.dto.ProjectCategoryDTO"
                    autoMapping="true" notNullColumn="category_id">
            <id property="id" column="category_id"/>
            <result property="name" column="category_name"/>
            <result property="code" column="category_code"/>
            <result property="organizationId" column="category_org_id"/>
            <result property="objectVersionNumber" column="category_version_number"/>
            <result property="createdBy" column="category_created_by"/>
            <result property="creationDate" column="category_creation_date"/>
        </collection>
    </resultMap>

    <insert id="insertWithWho">
        INSERT INTO fd_project(name, code,organization_id,is_enabled, CATEGORY,created_by,last_updated_by,before_category)
        VALUES (#{projectDTO.name},#{projectDTO.code},#{projectDTO.organizationId},#{projectDTO.enabled},
        #{projectDTO.category},#{projectDTO.createdBy},#{projectDTO.lastUpdatedBy},#{projectDTO.beforeCategory});
    </insert>

    <select id="selectProjectsNotGroup" resultMap="projectDTO">
        SELECT fp.id,fp.name,fp.code,fp.organization_id,fpc.code as category,fp.operate_type
        FROM fd_project fp
        inner join fd_project_map_category fpmc on fp.id = fpmc.project_id
        inner join fd_project_category fpc on (fpc.id = fpmc.category_id and fpc.code = 'N_AGILE')
        WHERE fp.organization_id = #{orgId} AND fp.is_enabled = 1
        and  fp.id not in (
        select fpr.project_id as id
        from fd_project_relationship fpr
        where fpr.is_enabled = 1 or fpr.parent_id =  #{projectId}
        )
    </select>


    <select id="selectGroupInfoByEnableProject" resultMap="projectDTO">
        SELECT
        FP.ID,
        FP.NAME,
        FP.ORGANIZATION_ID,
        FP.CODE,
        FP.IS_ENABLED,
        FP.OBJECT_VERSION_NUMBER,
        FP.IMAGE_URL,
        FP.CATEGORY
        FROM FD_PROJECT_RELATIONSHIP FPR
        INNER JOIN FD_PROJECT FP ON FPR.PROGRAM_ID = FP.ID
        WHERE FP.ORGANIZATION_ID = #{orgId} AND FPR.PROJECT_ID = #{projectId}
        AND FPR.IS_ENABLED = 1
    </select>

    <select id="selectProjectsByUserIdOrAdmin" resultMap="projectWithRoleAndCategoryDTO">
        SELECT fp.*,
        iu.real_name as create_user_name,
        iu.image_url as create_user_image_url,
        fp2.name as program_name,
        ir.id AS role_id,
        ir.name AS role_name,
        ir.code AS role_code,
        ir.is_enabled AS role_is_enabled,
        ir.h_tenant_id as role_org_id,
        ir.object_version_number as role_version_number,
        ir.created_by as role_created_by,
        ir.creation_date as role_creation_date,
        fpc.id as category_id,
        fpc.name as category_name,
        fpc.code as category_code,
        fpc.object_version_number as category_version_number,
        fpc.organization_id as category_org_id,
        fpc.created_by as category_created_by,
        fpc.creation_date as category_creation_date
        FROM fd_project fp
        inner join fd_project_map_category fpmc on fp.id = fpmc.project_id
        inner join fd_project_category fpc on fpc.id = fpmc.category_id
        left join fd_project_relationship fpr on ( fp.id = fpr.project_id and fpr.is_enabled)
        left join fd_project fp2 on fpr.program_id = fp2.id
        left join iam_user iu on iu.id = fp.created_by
        <choose>
            <when test="!isAdmin and !isOrgAdmin">
                INNER JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                INNER JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </when>
            <otherwise>
                LEFT JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                LEFT JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                LEFT JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </otherwise>
        </choose>
        <where>
            fp.organization_id = #{organizationId}

            <if test="!isAdmin and !isOrgAdmin">
                AND imr.member_id = #{userId}
                AND imr.member_type = 'user'
                AND imr.source_type = 'organization'
                AND imr.source_id = #{organizationId}
            </if>
            <if test="projectDTO != null">
                <if test="projectDTO.name != null">
                    AND fp.name LIKE concat(concat('%',#{projectDTO.name}),'%')
                </if>
                <if test="projectDTO.code != null">
                    AND fp.code LIKE concat(concat('%',#{projectDTO.code}),'%')
                </if>
                <if test="projectDTO.category != null">
                    AND fp.category LIKE concat(concat('%',#{projectDTO.category}),'%')
                </if>
                <if test="projectDTO.enabled != null">
                    AND fp.is_enabled = #{projectDTO.enabled}
                </if>
                <if test="projectDTO.createdBy != null">
                    AND fp.created_by = #{userId}
                </if>
            </if>
            <if test="params != null">
                AND (
                fp.name LIKE concat(concat('%', #{params}), '%') OR
                fp.code LIKE concat(concat('%', #{params}), '%')
                )
            </if>
        </where>
        order by fp.is_enabled desc,fp.creation_date desc, fpmc.id asc
    </select>

    <select id="programProjectIds" resultType="java.lang.Long">
        SELECT fd.id
        FROM fd_project fd
        JOIN fd_project_map_category fpmc ON fpmc.CATEGORY_ID =
                                             (
                                             SELECT fpc.id
                                             FROM fd_project_category fpc
                                             WHERE fpc.CODE = 'PROGRAM'
                                             )
        WHERE fd.id = fpmc.PROJECT_ID
    </select>
    <select id="listProjectsByUserIdOrAdmin" resultMap="projectMap">
        SELECT fp.*,
        iu.real_name as create_user_name,
        iu.image_url as create_user_image_url,
        fp2.name as program_name
        FROM fd_project fp
        left join fd_project_relationship fpr on ( fp.id = fpr.project_id and fpr.is_enabled)
        left join fd_project fp2 on fpr.program_id = fp2.id
        left join iam_user iu on iu.id = fp.created_by
        <choose>
            <when test="!isAdmin and !isOrgAdmin">
                INNER JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                INNER JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </when>
            <otherwise>
                LEFT JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                LEFT JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                LEFT JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </otherwise>
        </choose>
        <where>
            fp.organization_id = #{organizationId}

            <if test="!isAdmin and !isOrgAdmin">
                AND imr.member_id = #{userId}
                AND imr.member_type = 'user'
                AND imr.source_type = 'organization'
                AND imr.source_id = #{organizationId}
            </if>
            <if test="projectDTO != null">
                <if test="projectDTO.name != null">
                    AND fp.name LIKE concat(concat('%',#{projectDTO.name}),'%')
                </if>
                <if test="projectDTO.code != null">
                    AND fp.code LIKE concat(concat('%',#{projectDTO.code}),'%')
                </if>
                <if test="projectDTO.category != null">
                    AND fp.category LIKE concat(concat('%',#{projectDTO.category}),'%')
                </if>
                <if test="projectDTO.enabled != null">
                    AND fp.is_enabled = #{projectDTO.enabled}
                </if>
                <if test="projectDTO.createdBy != null">
                    AND fp.created_by = #{userId}
                </if>
            </if>
            <if test="params != null">
                AND (
                fp.name LIKE concat(concat('%', #{params}), '%') OR
                fp.code LIKE concat(concat('%', #{params}), '%')
                )
            </if>
        </where>
        GROUP BY
            fp.id,fp2.id
        order by
        <if test="projectDTO!=null">
            <if test="projectDTO.id !=null">
                fp.id=#{projectDTO.id} desc,
            </if>
        </if>
        fp.is_enabled desc,fp.creation_date desc
    </select>

    <select id="queryProjectsBelongToOrganizationCount" resultType="java.lang.Integer">
        SELECT count(*)
        FROM fd_project WHERE ORGANIZATION_ID != #{organizationId}
                          AND ID IN
        <foreach collection="projectIds" item="projectId" open="(" close=")" separator=",">
            #{projectId}
        </foreach>
    </select>
</mapper>