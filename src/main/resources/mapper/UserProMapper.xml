<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.iam.infra.mapper.UserProMapper">
    <resultMap id="userWithRolesMap" type="io.choerodon.iam.infra.dto.UserProDTO" autoMapping="true">
        <id property="id" column="id"/>
        <result property="realName" column="real_name"/>
        <result property="loginName" column="login_name"/>
        <result property="ldap" column="is_ldap"/>
        <result property="imageUrl" column="image_url"/>
        <result property="enabled" column="is_enabled"/>
        <result property="locked" column="is_locked"/>
        <result property="organizationId" column="organization_id"/>
        <result property="tenantName" column="user_org_name"/>
        <result property="organizationCode" column="user_org_code"/>
        <result property="objectVersionNumber" column="user_version_number"/>
        <result property="programOwner" column="program_owner"/>
        <collection property="roles" ofType="org.hzero.iam.domain.entity.Role"
                    autoMapping="true" notNullColumn="role_id">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="code" column="role_code"/>
            <result property="enabled" column="role_is_enabled"/>
            <result property="tenantId" column="role_org_id"/>
        </collection>
    </resultMap>

    <resultMap id="projectListUserWithRolesMap" type="io.choerodon.iam.api.vo.SubProjectWithProjectMemberVO" autoMapping="true">
        <result property="projectId" column="source_id"/>
        <collection property="userDTOList" ofType="io.choerodon.iam.infra.dto.UserProDTO"
                    autoMapping="true" notNullColumn="role_id">
            <result property="id" column="id"/>
            <result property="realName" column="real_name"/>
            <result property="loginName" column="login_name"/>
            <result property="ldap" column="is_ldap"/>
            <result property="imageUrl" column="image_url"/>
            <result property="enabled" column="is_enabled"/>
            <result property="locked" column="is_locked"/>
            <result property="organizationId" column="organization_id"/>
            <result property="tenantName" column="user_org_name"/>
            <result property="organizationCode" column="user_org_code"/>
            <result property="objectVersionNumber" column="user_version_number"/>
            <collection property="roles" ofType="org.hzero.iam.domain.entity.Role"
                        autoMapping="true" notNullColumn="role_id">
                <id property="id" column="role_id"/>
                <result property="name" column="role_name"/>
                <result property="code" column="role_code"/>
                <result property="enabled" column="role_is_enabled"/>
                <result property="tenantId" column="role_org_id"/>
            </collection>
        </collection>
    </resultMap>

    <select id="selectCountUsersOnProjectLevel" resultType="int">
        select count(1)
        from
        (
        select distinct iut.id
        from
        (
        select iu.*,
        case when iu.is_ldap=1 then iu.login_name else iu.email end as target_login_name
        from iam_user iu
        ) iut
        left join iam_member_role imr on iut.id = imr.member_id
        left join fd_project_permission fdu on (imr.id = fdu.MEMBER_ROLE_ID)
        JOIN iam_role ir on ir.id = imr.role_id
        <if test="roleName != null">
            left join iam_role ir2 on ir2.id = imr.role_id
        </if>
        <where>
            fdu.PROJECT_ID = #{sourceId}
            <if test="roleName != null">
                and ir.name like concat(concat('%',#{roleName}),'%')
            </if>
            <if test="realName != null">
                and iut.real_name LIKE concat(concat('%',#{realName}),'%')
            </if>
            <if test="loginName != null">
                and iut.target_login_name LIKE concat(concat('%',#{loginName}),'%')
            </if>
            <if test="enabled != null">
                and iut.is_enabled = #{enabled}
            </if>
            <if test="params != null">
                and (
                iut.target_login_name like concat(concat('%',#{params}),'%') or
                iut.real_name like concat(concat('%',#{params}),'%')
                )
            </if>
        </where>
        ) t
    </select>

    <select id="queryUserInProjectWithRole" resultMap="projectListUserWithRolesMap">
        SELECT t2.id,
               pu.PROJECT_ID            AS source_id,
               t2.real_name,
               t2.image_url,
               t2.is_ldap,
               t2.target_login_name     AS login_name,
               t2.is_enabled,
               t2.is_locked,
               t2.organization_id,
               t2.email,
               t2.LANGUAGE,
               t2.time_zone,
               t2.phone,
               t2.object_version_number AS user_version_number,
               fo.tenant_name           AS user_org_name,
               fo.tenant_num            AS user_org_code,
               ir2.id                   AS role_id,
               ir2.CODE                 AS role_code,
               ir2.NAME                 AS role_name,
               ir2.is_enabled           AS role_is_enabled,
               ir2.h_tenant_id          AS role_org_id
        FROM (
                 SELECT DISTINCT t1.*
                 FROM (
                          SELECT iut.*
                          FROM (SELECT iu.*,
                                       CASE
                                           WHEN iu.is_ldap = 1 THEN iu.login_name
                                           ELSE iu.email
                                           END AS target_login_name
                                FROM iam_user iu
                                WHERE iu.is_enabled = 1) iut
                                   LEFT JOIN
                               iam_member_role imr
                               ON (imr.member_id = iut.id
                                   AND imr.member_type = 'user')
                                   INNER JOIN
                               iam_role ir
                               ON ir.id = imr.role_id
                                   INNER JOIN fd_project_permission fpu ON fpu.MEMBER_ROLE_ID = imr.id
                          WHERE fpu.PROJECT_ID IN
                            <foreach item="item" index="index" collection="projectIds" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                            AND imr.source_type = 'organization'
                      ) t1
                 ORDER BY t1.is_enabled DESC,
                          t1.id DESC
             ) t2
                 LEFT JOIN
             (SELECT imr2.*, fpu2.PROJECT_ID
              FROM iam_member_role imr2
                       INNER JOIN fd_project_permission fpu2
                                  ON imr2.id = fpu2.MEMBER_ROLE_ID AND imr2.member_type = 'user' AND
                                     fpu2.PROJECT_ID IN
                                <foreach item="item" index="index" collection="projectIds" open="(" separator="," close=")">
                                    #{item}
                                </foreach>
                                AND imr2.source_type = 'organization') pu
             ON (
                 pu.member_id = t2.id)
                 INNER JOIN
             iam_role ir2
             ON ir2.id = pu.role_id
                 LEFT JOIN
             hpfm_tenant fo
             ON (
                 t2.organization_id = fo.tenant_id
                 )
        ORDER BY ROLE_CODE
            DESC;
    </select>

    <select id="selectUserWithRolesOnProjectLevel" resultMap="userWithRolesMap">
        select
        t2.id,
        t2.real_name,
        t2.target_login_name as login_name,
        t2.is_enabled,
        t2.is_ldap,
        t2.is_locked,
        t2.organization_id,
        t2.email,
        t2.language,
        t2.time_zone,
        t2.phone,
        t2.image_url,
        t2.object_version_number as user_version_number,
        fo.tenant_name as user_org_name,
        htc.config_value as user_org_code,
        ir2.id as role_id,ir2.code as role_code,
        ir2.name as role_name,
        ir2.is_enabled as role_is_enabled,
        ir2.h_tenant_id as role_org_id,
        (
        SELECT
        count(1)
        FROM
        iam_member_role imr3
        INNER JOIN fd_project_permission fpu2 ON (
        imr3.id = fpu2.MEMBER_ROLE_ID
        AND fpu2.PROJECT_ID = ( SELECT fpr.PARENT_ID FROM fd_project_relationship fpr WHERE fpr.PROJECT_ID = #{sourceId} AND fpr.is_enabled = true))
        INNER JOIN iam_role ir ON imr3.role_id = ir.id
        INNER JOIN hiam_label_rel hlr ON ir.id = hlr.data_id
        AND hlr.data_type = 'ROLE'
        INNER JOIN iam_label il ON hlr.label_id = il.id
        WHERE
        (
        il. NAME = 'PROJECT_MEMBER'
        OR il.`name` = 'PROJECT_ADMIN'
        )
        AND imr3.member_id = t2.id
        ) AS program_owner
        from
        (
        select distinct t1.*
        from
        (
        select iut.*
        from
        (
        select iu.*,
        case when iu.is_ldap=1 then iu.login_name else iu.email end as target_login_name
        from iam_user iu
        ) iut
        join iam_member_role imr ON iut.id = imr.member_id
        join fd_project_permission fdu on fdu.MEMBER_ROLE_ID = imr.id
        JOIN iam_role ir2 on ir2.id=imr.role_id
        <if test="roleName != null">
            left join iam_role ir on ir.id = imr.role_id
        </if>
        <if test="labels!=null and labels.size>0">
            INNER JOIN hiam_label_rel hlr ON ir2.id = hlr.data_id
            AND hlr.data_type = 'ROLE'
            INNER JOIN iam_label il ON hlr.label_id = il.id and il.NAME in
            <foreach item="label" index="index" collection="labels" open="(" separator="," close=")">
                #{label}
            </foreach>
        </if>
        <where>
            fdu.PROJECT_ID = #{sourceId}
            <if test="roleName != null">
                and ir.name like concat(concat('%',#{roleName}),'%')
            </if>
            <if test="realName != null">
                and iut.real_name LIKE concat(concat('%',#{realName}),'%')
            </if>
            <if test="loginName != null">
                and iut.target_login_name LIKE concat(concat('%',#{loginName}),'%')
            </if>
            <if test="enabled != null">
                and iut.is_enabled = #{enabled}
            </if>
            <if test="params != null">
                and (
                iut.target_login_name like concat(concat('%',#{params}),'%') or
                iut.real_name like concat(concat('%',#{params}),'%')
                )
            </if>
        </where>
        ) t1
        order by t1.is_enabled desc, t1.id desc
        <if test="start != null and size != null">
            limit #{start}, #{size}
        </if>
        ) t2
        inner join iam_member_role imr2 ON t2.id = imr2.member_id
        inner join fd_project_permission fdu2 on imr2.id = fdu2.MEMBER_ROLE_ID and fdu2.PROJECT_ID = #{sourceId}
        left join iam_role ir2 on ir2.id = imr2.role_id
        left join hpfm_tenant fo on (t2.organization_id = fo.tenant_id)
        left join hpfm_tenant_config htc ON fo.tenant_id = htc.tenant_id and htc.config_key = 'code'
    </select>
</mapper>
