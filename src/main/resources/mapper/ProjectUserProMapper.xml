<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.iam.infra.mapper.ProjectUserProMapper">
    <resultMap id="userWithRolesMap" type="io.choerodon.iam.infra.dto.UserDTO" autoMapping="true">
        <id property="id" column="id"/>
        <result property="realName" column="real_name"/>
        <result property="loginName" column="login_name"/>
        <result property="enabled" column="is_enabled"/>
        <result property="ldap" column="is_ldap"/>
        <result property="imageUrl" column="image_url"/>
        <result property="locked" column="is_locked"/>
        <result property="organizationId" column="organization_id"/>
        <result property="tenantName" column="user_org_name"/>
        <result property="organizationCode" column="user_org_code"/>
        <result property="objectVersionNumber" column="user_version_number"/>
        <collection property="roles" ofType="org.hzero.iam.domain.entity.Role"
                    autoMapping="true" notNullColumn="role_id">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="code" column="role_code"/>
            <result property="enabled" column="role_is_enabled"/>
            <result property="tenantId" column="role_org_id"/>
        </collection>
    </resultMap>

    <resultMap id="userDTO" type="io.choerodon.iam.infra.dto.UserDTO" autoMapping="true">
        <id property="id" column="id"/>
        <result property="enabled" column="is_enabled"/>
        <result property="locked" column="is_locked"/>
        <result property="ldap" column="is_ldap"/>
        <result property="admin" column="is_admin"/>
        <result property="password" column="hash_password"/>
    </resultMap>

    <resultMap id="projectUserMap" type="io.choerodon.iam.api.vo.ProjectUserVO">
        <id column="MEMBER_ID" property="memberId"/>
        <association property="role" javaType="org.hzero.iam.domain.entity.Role">
            <id column="id" property="id"/>
            <result property="name" column="name"/>
            <result property="code" column="code"/>
            <result property="description" column="description"/>
            <result property="isEnabled" column="is_enabled"/>
            <result property="isBuiltIn" column="is_built_in"/>
        </association>
    </resultMap>


    <select id="selectAgileUsersByProjectId" resultMap="userDTO">
        select
        iu1.*,
        case
            when iu1.is_enabled = 0
            <!--如果用户停用，将用户权重设置为最小-->
            then t1.weight - 100
            else t1.weight
        end as weight
        from (
            select
            t3.member_id,
            <!--如果是项目成员，且为项目群成员，则权重减10-->
            case
            when
            t3.weight = 0 and t3.program_owner = 1
            then t3.weight - 10
            else t3.weight
            end as weight
            from (
                select
                t2.weight as weight,
                t2.member_id,
                (
                    select
                        count(1)
                    from
                        iam_member_role imr3
                    inner join fd_project_permission fpu2
                    on (
                        imr3.id = fpu2.member_role_id
                        and fpu2.project_id = (
                            select fpr.parent_id
                            from fd_project_relationship fpr
                            where fpr.project_id = #{projectId}
                        )
                    )
                    inner join iam_role ir on imr3.role_id = ir.id
                    inner join hiam_label_rel hlr on ir.id = hlr.data_id
                    and hlr.data_type = 'ROLE'
                    inner join iam_label il on hlr.label_id = il.id
                    where (
                        il.name = 'PROJECT_MEMBER'
                        or il.name = 'PROJECT_ADMIN'
                    )
                    and imr3.member_id = t2.member_id
                ) as program_owner
                from (
                    select
                        t.member_id,
                        max(t.weight) as weight
                    from (
                        select
                        imr.member_id,
                        case
                            when imr.role_id in
                            <foreach collection="adminRoleIds" item="adminRole" separator="," open="(" close=")">
                                #{adminRole}
                            </foreach>
                            then 10
                            else 0
                        end as weight
                        from iam_member_role imr
                        join fd_project_permission fpu on imr.id = fpu.member_role_id
                        where fpu.project_id = #{projectId}
                        <if test="userIds != null and userIds.size > 0">
                            union
                            select
                                iu.id,
                                0 as weight
                            from iam_user iu
                            where iu.id in
                            <foreach item="id" index="index" collection="userIds"
                                     open="(" separator="," close=")">
                                #{id}
                            </foreach>
                        </if>
                    ) t
                    group by t.member_id
                ) t2
            ) t3
        ) t1
        join iam_user iu1 on t1.member_id = iu1.id
        where 1=1
        <if test="param != null">
            AND (
            iu1.login_name LIKE concat(concat('%',#{param}),'%') OR
            iu1.real_name LIKE concat(concat('%',#{param}),'%') OR
            iu1.attribute15 LIKE concat(concat('%',#{param}),'%') OR
            iu1.attribute14 LIKE concat(concat('%',#{param}),'%')
            )
        </if>
        order by weight desc, iu1.id asc
    </select>



    <select id="selectUsersByOptionsOrderByRoles" resultType="io.choerodon.iam.infra.dto.UserDTO">
        select
        iu1.id,
        iu1.login_name,
        iu1.email,
        iu1.organization_id,
        iu1.real_name,
        iu1.phone,
        iu1.INTERNATIONAL_TEL_CODE,
        iu1.image_url,
        iu1.profile_photo,
        iu1.time_zone,
        iu1.last_password_updated_at,
        iu1.last_login_at,
        iu1.is_enabled AS enabled,
        iu1.is_locked AS locked,
        iu1.is_ldap AS ldap,
        iu1.is_admin AS admin,
        iu1.locked_until_at,
        iu1.password_attempt,
        iu1.object_version_number,
        iu1.created_by,
        iu1.creation_date,
        iu1.last_updated_by,
        iu1.last_update_date,
        iu1.user_type,
        t1.weight
        from (
            select
            t3.member_id,
            <!--如果是项目成员，且为项目群成员，则权重减20-->
            case
            when
            t3.weight = 20 and t3.program_owner = 1
            then t3.weight - 20
            else t3.weight
            end as weight
            from (
                select
                t2.weight,
                t2.member_id,
                (
                    select
                    count(1)
                    from
                    iam_member_role imr3
                    inner join fd_project_permission fpu2
                    on (
                        imr3.id = fpu2.member_role_id
                        and fpu2.project_id = (
                            select fpr.parent_id
                            from fd_project_relationship fpr
                            where fpr.project_id = #{projectId} AND fpr.is_enabled = true
                        )
                    )
        <!--在项目群钟分配任意角色，都会为用户在子项目中分配，项目成员角色，这个判断应该不是必须的-->
<!--                    inner join iam_role ir on imr3.role_id = ir.id-->
<!--                    inner join hiam_label_rel hlr on ir.id = hlr.data_id-->
<!--                    and hlr.data_type = 'ROLE'-->
<!--                    inner join iam_label il on hlr.label_id = il.id-->
<!--                    where (-->
<!--                        il.name = 'PROJECT_MEMBER'-->
<!--                        or il.name = 'PROJECT_ADMIN'-->
<!--                    )-->

                    where imr3.member_id = t2.member_id
                ) as program_owner
                from (
                    select
                    t.member_id,
                    max(t.weight) as weight
                    from
                    (
                        select
                            imr.member_id,
                            case
                                when imr.role_id = #{projectAdminId}
                                then 30
                                when imr.role_id = #{projectMemberId}
                                then 20
                                <!-- 自定义角色-->
                                else 10
                            end as weight
                        from iam_member_role imr
                        join fd_project_permission fpu on imr.id = fpu.member_role_id
                        left join iam_user iu on imr.member_id = iu.id
                        where fpu.project_id = #{projectId}
                        <if test="userId != null">
                            AND iu.id = #{userId}
                        </if>
                        <if test="email != null">
                            AND iu.email LIKE concat(concat('%',#{email}),'%')
                        </if>
                        <if test="param != null">
                            AND (
                            iu.login_name LIKE concat(concat('%',#{param}),'%') OR
                            iu.real_name LIKE concat(concat('%',#{param}),'%') OR
                            iu.attribute15 LIKE concat(concat('%',#{param}),'%') OR
                            iu.attribute14 LIKE concat(concat('%',#{param}),'%')
                            )
                        </if>
                    ) t
                    group by t.member_id
                )t2
            )t3
        ) t1
        join iam_user iu1 on t1.member_id = iu1.id
        order by t1.weight desc, iu1.id asc
    </select>

</mapper>
